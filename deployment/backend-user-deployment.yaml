apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: backend-user
  name: backend-user
spec:
  selector:
    matchLabels:
      service: backend-user
  replicas: 1
  template:
    metadata:
      labels:
        service: backend-user
    spec:
      containers:
        - image: docker.io/nghiepnx/udagram-api-user:latest
          name: backend-user
          imagePullPolicy: Always
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "1024Mi"
              cpu: "500m"
          env:
            - name: POSTGRES_USERNAME
              valueFrom:
                secretKeyRef:
                  name: env-secret
                  key: POSTGRES_USERNAME
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: env-secret
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: env-config
                  key: POSTGRES_HOST
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: env-config
                  key: POSTGRES_DB
            - name: AWS_BUCKET
              valueFrom:
                configMapKeyRef:
                  name: env-config
                  key: AWS_BUCKET
            - name: AWS_REGION
              valueFrom:
                configMapKeyRef:
                  name: env-config
                  key: AWS_REGION
            - name: AWS_PROFILE
              valueFrom:
                configMapKeyRef:
                  name: env-config
                  key: AWS_PROFILE
            - name: JWT_SECRET
              valueFrom:
                configMapKeyRef:
                  name: env-config
                  key: JWT_SECRET
            - name: URL
              valueFrom:
                configMapKeyRef:
                  name: env-config
                  key: URL
            - name: NODE_OPTIONS
              valueFrom:
                configMapKeyRef:
                  name: env-config
                  key: NODE_OPTIONS
          volumeMounts:
            - name: aws-secret
              mountPath: "/root/.aws/"
              readOnly: true
      restartPolicy: Always
      volumes:
        - name: aws-secret
          secret:
            secretName: aws-secret
---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: backend-user
  name: backend-user
spec:
  ports:
    - name: "8080"
      port: 8080
      targetPort: 8080
  selector:
    service: backend-user
